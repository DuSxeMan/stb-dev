<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>MainCharacter</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>Variables</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>MainCharacter</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
room_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jsp = jsp_normal
msp = msp_normal
sprite_index = MainCharacter
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Label
///Player Input Options
//Player Input
key_d = keyboard_check(ord('D'));
key_a = -keyboard_check(ord('A'));
key_w = keyboard_check_pressed(ord('W'));
shift_pressed = keyboard_check(vk_shift);
cheatmenu = keyboard_check(vk_insert);

//Player Reaction Move
move = key_d + key_a;
hsp = move * msp;
if (vsp &lt; 5) vsp += grav;
shift = shift_pressed + msp

//Player Reaction Jump
if (place_meeting(x,y+1,Obj_Ground1))   //Basic Collison With Ground
{
    vsp = key_w * -jsp
}
if (place_meeting(x,y+1,Obj_Ground2))   //Basic Collison With Ground
{
    vsp = key_w * -jsp
}
if (place_meeting(x,y+1,Obj_Wall1))   //Basic Collison With Top of The Wall
{
    vsp = key_w * -jsp
}

//Horizontal Collision
if (place_meeting(x+hsp,y,Obj_Wall1))
{
    while(!place_meeting(x+sign(hsp),y,Obj_Wall1))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
if (place_meeting(x+hsp,y,Obj_Ground1))
{
    while(!place_meeting(x+sign(hsp),y,Obj_Ground1))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
if (place_meeting(x+hsp,y,Obj_Ground2))
{
    while(!place_meeting(x+sign(hsp),y,Obj_Ground2))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
if (place_meeting(x+hsp,y,LEFT))
{
    while(!place_meeting(x+sign(hsp),y,LEFT))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
if (place_meeting(x+hsp,y,RIGHT))
{
    while(!place_meeting(x+sign(hsp),y,RIGHT))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
//Vertical Collision
if (place_meeting(x,y+vsp,Obj_Ground1))
{
    while(!place_meeting(x,y+sign(vsp),Obj_Ground1))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
if (place_meeting(x,y+vsp,Obj_Ground2))
{
    while(!place_meeting(x,y+sign(vsp),Obj_Ground2))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
if (place_meeting(x,y+vsp,Obj_Wall1))
{
    while(!place_meeting(x,y+sign(vsp),Obj_Wall1))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
//Doors
if (place_meeting(x+hsp,y,Door1))
{
    room_goto (Level_1)
}
//Obstructions
if (place_meeting(x,y+vsp,Obj_Spike))
{
    
}
//Finished Product
x += hsp;

y += vsp;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Obj_Spike">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>effect_create_above(ef_firework,x + 1,y,1,c_red)
score = 0
vsp = 2 * -1
hsp = 2 * -1
alarm[1] = 15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="RIGHTDOOR">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(Main_Menu2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>points = (score * 10)

draw_set_color(c_black)
draw_text(0,0,"Score:")
draw_set_color(c_blue)
draw_text(0,16,points)

if keyboard_check_pressed(ord('F')) then
{
    draw_set_color(c_red)
    draw_text(576,0,fps)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="45">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
port = 25565

//Dev List
cheat = get_string("Dev Input","")
if cheat = "MegaSpeed"
{
    msp = mspc
}
else if cheat = "MegaJump"
{
    jsp = jspc
}
else if cheat = "DebugOn"
{
    show_debug_overlay(on)
}
else if cheat = "DebugOff"
{
    show_debug_overlay(off)
}
else if cheat = "Test"
{
    show_message("Test")
}
else if cheat = "Question"
{
    if show_question("Main Menu or Restart")
    {
        room_goto (Main_Menu)
    }
    else room_restart()
}
else if cheat = "Multiplayer"
{
    room_goto(MultiplayerServer)
}
else {show_message("Not Vaild")}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-16,-16</point>
    <point>16,-16</point>
    <point>16,16</point>
    <point>-16,16</point>
  </PhysicsShapePoints>
</object>
